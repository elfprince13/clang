int main(int argc, char * argv[]){
	int a = 5, x(6), y, z;
	int p, *q = &p;
	@Loop2dAccumulate(test_skel)[5][a]{
		a++; 
	}

	switch(a) {
		case 0: a = a - 5; break;
		case 1 ... 3: a -= 6;
		default: a = a;
	}

	if (a == 0){
		a = 1;
	}

	if (a == 0) a = 1;
	else if (a == 1) a = 2;
	else a = 3;

test_label:
	if (a == 0){
		a = 1;
	} else if (a == 1) {
		a = 2;
	} else {
		a = 3;
	}

	if (a == 0){
		a = 1;
	} else {
		 if (a == 1) {
			a = 2;
		} else {
			a = 3;
		}
	}

	while(a < 5){
		a++;
	}
	
	while(a >= 0) a--;

	do a++; while(a < 5);
	do {
		a--;
	} while(a >= 0);

	for(;;);
	for(a = 0; a < 5; a++){ int i = 0; }
	for(int i = 0; i < 5; i++){ i++; }
	if(a == 0) goto test_label;
	if(a == 6) goto *&&test_label;
	
	int c[2][2] = {{0,1},{0,1}};
	@Loop2dAccumulate[5]
			[5]
			[argc]{
		int i = 0, j = 0;
		c[i][j] += c[i][j];
	}
		
	
	int b[2] = {0, 1};
	for(auto a : b){
		a + 1;
		if (a != 0) { continue; }
	}
 asm ("cld\n\t"
             "rep\n\t"
             "stosl"
             : /* no output registers */
             : "c" (2), "a" (0), "D" (b)
             : "%ecx", "%edi" 
             );

	a = true ? a : b[0];
	a = a ?: b[1];	

	return 0;
	//return;
}
